services:
  chomik-gateway:
    container_name: chomik-gateway
    image: openjdk:17-oracle
    ports:
      - 17000:17000
    volumes:
      - ./chomik-gateway/target/chomik-gateway-0.0.1-SNAPSHOT.jar:/chomik-gateway.jar
    command: ['java', '-jar', '/chomik-gateway.jar']
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
      - BANK_USER_ID=${BANK_USER_ID}
    networks:
      - chomik

  chomik-storage:
    container_name: chomik-storage
    image: openjdk:17-oracle
    ports:
      - 17001:17001
    volumes:
      - ./chomik-storage/target/chomik-storage-0.0.1-SNAPSHOT.jar:/chomik-storage.jar
    command: [ 'java', '-jar', '/chomik-storage.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - chomik

  chomik-delivery:
    container_name: chomik-delivery
    image: openjdk:17-oracle
    ports:
      - 17002:17002
    volumes:
      - ./chomik-delivery/target/chomik-delivery-0.0.1-SNAPSHOT.jar:/chomik-delivery.jar
    command: [ 'java', '-jar', '/chomik-delivery.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - chomik

  chomik-orders-balancer:
    container_name: chomik-orders-balancer
    image: nginx:1.13
    ports:
      - 17003:80
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/default.conf
    depends_on:
      - chomik-orders-1
      - chomik-orders-2
    networks:
      - chomik

  chomik-orders-1:
    container_name: chomik-orders-1
    image: openjdk:17-oracle
    volumes:
      - ./chomik-orders/target/chomik-orders-0.0.1-SNAPSHOT.jar:/chomik-orders.jar
    command: [ 'java', '-jar', '/chomik-orders.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - chomik

  chomik-orders-2:
    container_name: chomik-orders-2
    image: openjdk:17-oracle
    volumes:
      - ./chomik-orders/target/chomik-orders-0.0.1-SNAPSHOT.jar:/chomik-orders.jar
    command: [ 'java', '-jar', '/chomik-orders.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - chomik

  chomik-payment:
    container_name: chomik-payment
    image: openjdk:17-oracle
    ports:
      - 17004:17004
    volumes:
      - ./chomik-payment/target/chomik-payment-0.0.1-SNAPSHOT.jar:/chomik-payment.jar
    command: [ 'java', '-jar', '/chomik-payment.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
      - BANK_ACCOUNT_ID=${BANK_ACCOUNT_ID}
    networks:
      - chomik

  delivery-mock:
    container_name: delivery-mock
    image: openjdk:17-oracle
    ports:
      - 17005:17005
    volumes:
      - ./delivery-mock/target/delivery-mock-0.0.1-SNAPSHOT.jar:/delivery-mock.jar
    command: [ 'java', '-jar', '/delivery-mock.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - chomik

  payment-mock:
    container_name: payment-mock
    image: openjdk:17-oracle
    ports:
      - 17006:17006
    volumes:
      - ./payment-mock/target/payment-mock-0.0.1-SNAPSHOT.jar:/payment-mock.jar
    command: [ 'java', '-jar', '/payment-mock.jar' ]
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - chomik

  chomik-zookeeper:
    container_name: chomik-zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - chomik

  chomik-kafka:
    container_name: chomik-kafka
    image: confluentinc/cp-kafka:7.4.4
    ports:
      - 29092:29092
      - 9997:9997
    hostname: chomik-kafka
    depends_on:
      - chomik-zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: chomik-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://chomik-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: chomik-kafka
    networks:
      - chomik

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    depends_on:
      - chomik-kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - chomik

networks:
  chomik:
